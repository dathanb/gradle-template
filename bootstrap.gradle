class Config {
 def projectName
 def groupName
 def description
}

project.ext.config = new Config()

task(ask).doLast({
  def stdin = System.in
  if (stdin) {
    def reader = stdin.newReader()
    System.out.println("> Please enter a group name (e.g., com.stuff): ")
    project.config.groupName = reader.readLine()
    System.out.println("> Please enter a project name (e.g., doer): ")
    project.config.projectName = reader.readLine()
    System.out.println("> Please enter a project description (e.g., does stuff): ")
    project.config.description = reader.readLine()
  } else {
    logger.error "Cannot get console."
  }
})

task templatize(type: Copy) {
    into '.'
    from "$rootDir/templates/"
    include '*.tmpl'
    rename { file -> file.replace(".tmpl", "") }
    expand(project: project, config: project.config)
}

task(createFolders).doLast({
  println "Creating standard directory structure"
  [
    "src/main/java",
    "src/main/resources",
    "src/test/java",
    "src/test/resources"
  ].each {
    println("\tCreating ${rootDir}/${it}")
    new File("${rootDir}/${it}").mkdirs()
  }
})

task gitIgnore(type: Copy) {
  from "$rootDir/templates/"
  into "."
  include "gitignore-project"
  rename("gitignore-project", ".gitignore")
}

task(finale).doLast({
  println ""
  println "================================================================================================"
  println "Your project is ready to go, but you'll still need to add dependencies in the build.gradle file." 
  println "================================================================================================"
  println ""
})

templatize.dependsOn ask
finale.dependsOn templatize
finale.dependsOn createFolders
finale.dependsOn gitIgnore

defaultTasks 'finale'

